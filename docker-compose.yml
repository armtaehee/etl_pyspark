version: '3.8'
services:
  spark:
    image: docker.io/bitnami/spark:3.3.3
    volumes:
      - ./data:/opt/data:rw
      # - type: bind
        # source: ./data/
        # target: /opt/data
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    user: root
    ports:
      - '7077:7077'
      - '18080:8080'
    networks:
      - spark-network
  spark-worker:
    image: docker.io/bitnami/spark:3.3.3
    deploy:
      replicas: 1
    volumes:
      - ./data:/opt/data:rw
      # - type: bind
        # source: ./data
        # target: /opt/data
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    user: root
    networks:
      - spark-network
  etl:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./data:/opt/data:rw
    user: root
    environment:
      - SPARK_MASTER_URL=local[*]
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=myuser 
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DEFAULT_DB=warehouse
    networks:
      - spark-network
    depends_on:
      - postgres
  postgres:  
    image: postgres:13  
    container_name: postgres_db
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=warehouse
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spark-network
volumes:
  postgres_data:
networks:
  spark-network:
    driver: bridge
